## Adding a new Country or Region

Adding a new country to the Energy Transition Model requires changes to a number
of Quintel projects; fortunately, most of these changes are quite small. We will
start by creating CSVs for the region using the Excel files, before proceeding
to import those CSVs into ETSource. Finally, we'll take a look at how to enable
the region for use in ETModel.

For the sake of this guide, we are going to add a new fictional region called
"chiark". In any code examples, replace the name "chiark" with that of the
region you are adding.

#### ETDataset

TODO

#### ETSource

After you have created the necessary CSV files in ETDataset, it is time to
import them into ETSource.

You must start by creating a new sub-directory in `datasets/` with the same name
as the region, then creating an "ActiveDocument" with the regional attributes.
The easiest way to accomplish this is to create a copy of the NL document, and
modify it as required:

```sh
mkdir datasets/chiark
cp datasets/nl/nl.ad datasets/chiark/chiark.ad
```

Inside this document you will find the following two lines:

```
- enabled.etengine = true
- enabled.etmodel = true
```

The line referencing ETEngine *must* be true in order for it to appear in
ETEngine, but the other line may be set to false should you not yet wish it to
be visible in ETModel.

From the ETSource directory, run:

```sh
DATASET=chiark rake import
```

The CSVs you created in ETDataset will now be placed into their correct
locations in ETSource. You can test that the region calculates correctly by
running:

```sh
rspec
```

Assuming `rspec` completed with no errors, your region is now ready for use in
ETEngine. Restart ETEngine, then select the country by selecting Data â†’
Overview, then use the drop-down at the top-right of the page.

If you set `- enabled.etmodel = true` in the ".ad" file, then we still
have some work to do to have the region show in ETModel.

#### ETModel

ETModel requires that you add the region to the "Choose country" drop-down
manually. You can do this by editing the `area_links` method in
(layout_helper.rb)[https://github.com/quintel/etmodel/blob/master/app/helpers/layout_helper.rb].

```ruby
def area_links
  links = []
  add_area_choice links, "nl"
  add_area_choice links, "chiark"

  # ...
end
```

If ETModel is already running, restart the application and your new region
should appear!
